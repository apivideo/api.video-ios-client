//
// WebhooksCreationPayload.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct WebhooksCreationPayload: Codable, Hashable {

    public enum Events: String, Codable, CaseIterable {
        case liveStreamBroadcastStarted = "live-stream.broadcast.started"
        case liveStreamBroadcastEnded = "live-stream.broadcast.ended"
        case videoSourceRecorded = "video.source.recorded"
        case videoEncodingQualityCompleted = "video.encoding.quality.completed"
        case videoCaptionGenerated = "video.caption.generated"
        case videoSummaryGenerated = "video.summary.generated"
    }
    /** An array of webhook events that you want to subscribe to. */
    public var events: [Events]
    /** The the url to which HTTP notifications are sent. It could be any http or https URL. */
    public var url: String

    public init(events: [Events], url: String) {
        self.events = events
        self.url = url
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case events
        case url
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(events, forKey: .events)
        try container.encode(url, forKey: .url)
    }
}

